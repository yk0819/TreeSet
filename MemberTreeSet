import java.util.Iterator;
import java.util.TreeSet;

public class MemberTreeSet {
	
	// TreeSet, key와 value. 두개의 값으로 구성되어 있는 자료형
	// key 값이 같을 수 없다. 중복불가.
	// key 값의 동일성 구현을 위해 필요에 따라 equals(물리적)와 hashCode(논리적)메서드를 재정의 해야한다
	// 들어가는 값을 비교해서 어느쪽에 위치할지 정해주어야 한다. (key or value, and ASC or DESC)
	// 방법은 두가지로 entity클래스에서 implements한다.( Comparator or Comparable)
	private TreeSet<Member> treeSet;
	
	public MemberTreeSet() {
//		treeSet = new TreeSet<>();
		treeSet = new TreeSet<Member>(new Member()); // compare인 경우 어떤 객체가 대상인지 적어주어야 한다. (기본 생성자도 필요)
// java.util.TreeSet.TreeSet<Member>(Comparator<? super Member> comparator)
	}
		
	public void addMember(Member member) {
		treeSet.add(member);
	}
	
	public boolean removeMember(int memberId) {
		
		Iterator<Member> ir = treeSet.iterator();
		while(ir.hasNext()) {
			Member member = ir.next(); // 0부터 시작해서 값이 있으면 이동, 순회한다.
			
			int tempId = member.getMemberId(); // member 변수에서 id를 가져와서 다른 변수에 담는다
			if(tempId == memberId) { // 그 담은 변수와 매개변수로 받은 id가 같다면
				treeSet.remove(member); // remove
				return true;
			}
		}
		System.out.println("該当" + memberId + "は存在しません");
		return false;
	}
	
	public void showAllMember() {
		
		for(Member member : treeSet) {
			System.out.println(member);
		}
		System.out.println();
	}
}
